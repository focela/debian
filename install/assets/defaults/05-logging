#!/command/with-contenv bash
#
# Container Logging Configuration
# This script configures FluentBit log shipping and LogRotate settings
# based on the detected operating system and container configuration.
#

set -euo pipefail
IFS=$'\n\t'

#--------------------------------------------------
# Configuration
#--------------------------------------------------
# FluentBit core settings
FLUENTBIT_MODE=${FLUENTBIT_MODE:-"NORMAL"}
FLUENTBIT_SETUP_TYPE=${FLUENTBIT_SETUP_TYPE:-"AUTO"}
FLUENTBIT_OUTPUT=${FLUENTBIT_OUTPUT:-"FORWARD"}
FLUENTBIT_FLUSH_SECONDS=${FLUENTBIT_FLUSH_SECONDS:-"1"}
FLUENTBIT_GRACE_SECONDS=${FLUENTBIT_GRACE_SECONDS:-"1"}

# FluentBit log settings
FLUENTBIT_LOG_FILE=${FLUENTBIT_LOG_FILE:-"fluentbit.log"}
FLUENTBIT_LOG_LEVEL=${FLUENTBIT_LOG_LEVEL:-"info"}
FLUENTBIT_LOG_PATH=${FLUENTBIT_LOG_PATH:-"/var/log/fluentbit/"}

# FluentBit configuration files
FLUENTBIT_CONFIG_PARSERS=${FLUENTBIT_CONFIG_PARSERS:-"parsers.conf"}
FLUENTBIT_CONFIG_PLUGINS=${FLUENTBIT_CONFIG_PLUGINS:-"plugins.conf"}

# FluentBit HTTP server settings
FLUENTBIT_ENABLE_HTTP_SERVER=${FLUENTBIT_ENABLE_HTTP_SERVER:-"TRUE"}
FLUENTBIT_HTTP_LISTEN_IP=${FLUENTBIT_HTTP_LISTEN_IP:-"0.0.0.0"}
FLUENTBIT_HTTP_LISTEN_PORT=${FLUENTBIT_HTTP_LISTEN_PORT:-"2020"}

# FluentBit storage settings
FLUENTBIT_ENABLE_STORAGE_METRICS=${FLUENTBIT_ENABLE_STORAGE_METRICS:-"TRUE"}
FLUENTBIT_STORAGE_PATH=${FLUENTBIT_STORAGE_PATH:-"/tmp/fluentbit/storage"}
FLUENTBIT_STORAGE_SYNC=${FLUENTBIT_STORAGE_SYNC:-"normal"}
FLUENTBIT_STORAGE_CHECKSUM=${FLUENTBIT_STORAGE_CHECKSUM:-"FALSE"}
FLUENTBIT_STORAGE_BACKLOG_LIMIT=${FLUENTBIT_STORAGE_BACKLOG_LIMIT:-"5M"}

# FluentBit forward output settings
FLUENTBIT_FORWARD_PORT=${FLUENTBIT_FORWARD_PORT:-"24224"}
FLUENTBIT_FORWARD_BUFFER_CHUNK_SIZE=${FLUENTBIT_FORWARD_BUFFER_CHUNK_SIZE:-"1M"}
FLUENTBIT_FORWARD_BUFFER_MAX_SIZE=${FLUENTBIT_FORWARD_BUFFER_MAX_SIZE:-"6M"}
FLUENTBIT_OUTPUT_FORWARD_HOST=${FLUENTBIT_OUTPUT_FORWARD_HOST:-"fluent-proxy"}
FLUENTBIT_OUTPUT_FORWARD_TLS=${FLUENTBIT_OUTPUT_FORWARD_TLS:-"FALSE"}
FLUENTBIT_OUTPUT_FORWARD_TLS_VERIFY=${FLUENTBIT_OUTPUT_FORWARD_TLS_VERIFY:-"FALSE"}

# FluentBit Loki output settings
FLUENTBIT_OUTPUT_LOKI_HOST=${FLUENTBIT_OUTPUT_LOKI_HOST:-"loki"}
FLUENTBIT_OUTPUT_LOKI_PORT=${FLUENTBIT_OUTPUT_LOKI_PORT:-"3100"}
FLUENTBIT_OUTPUT_LOKI_TLS=${FLUENTBIT_OUTPUT_LOKI_TLS:-"FALSE"}
FLUENTBIT_OUTPUT_LOKI_TLS_VERIFY=${FLUENTBIT_OUTPUT_LOKI_TLS_VERIFY:-"FALSE"}
FLUENTBIT_OUTPUT_LOKI_COMPRESS_GZIP=${FLUENTBIT_OUTPUT_LOKI_COMPRESS_GZIP:-"gzip"}

# FluentBit tail input settings
FLUENTBIT_TAIL_BUFFER_CHUNK_SIZE=${FLUENTBIT_TAIL_BUFFER_CHUNK_SIZE:-"32k"}
FLUENTBIT_TAIL_BUFFER_MAX_SIZE=${FLUENTBIT_TAIL_BUFFER_MAX_SIZE:-"32k"}
FLUENTBIT_TAIL_READ_FROM_HEAD=${FLUENTBIT_TAIL_READ_FROM_HEAD:-"FALSE"}
FLUENTBIT_TAIL_SKIP_EMPTY_LINES=${FLUENTBIT_TAIL_SKIP_EMPTY_LINES:-"TRUE"}
FLUENTBIT_TAIL_SKIP_LONG_LINES=${FLUENTBIT_TAIL_SKIP_LONG_LINES:-"TRUE"}
FLUENTBIT_TAIL_KEY_PATH_ENABLE=${FLUENTBIT_TAIL_KEY_PATH_ENABLE:-"TRUE"}
FLUENTBIT_TAIL_KEY_PATH=${FLUENTBIT_TAIL_KEY_PATH:-"filename"}
FLUENTBIT_TAIL_KEY_OFFSET_ENABLE=${FLUENTBIT_TAIL_KEY_OFFSET_ENABLE:-"FALSE"}
FLUENTBIT_TAIL_KEY_OFFSET=${FLUENTBIT_TAIL_KEY_OFFSET:-"offset"}

# FluentBit tail database settings
FLUENTBIT_TAIL_DB_ENABLE=${FLUENTBIT_TAIL_DB_ENABLE:-"TRUE"}
FLUENTBIT_TAIL_DB_SYNC=${FLUENTBIT_TAIL_DB_SYNC:-"normal"}
FLUENTBIT_TAIL_DB_LOCK=${FLUENTBIT_TAIL_DB_LOCK:-"TRUE"}
FLUENTBIT_TAIL_DB_JOURNAL_MODE=${FLUENTBIT_TAIL_DB_JOURNAL_MODE:-"WAL"}

# LogRotate settings
LOGROTATE_COMPRESSION_TYPE=${LOGROTATE_COMPRESSION_TYPE:-"zstd"}  # Default, may be overridden by OS detection
LOGROTATE_COMPRESSION_VALUE=${LOGROTATE_COMPRESSION_VALUE:-"8"}
LOGROTATE_RETAIN_DAYS=${LOGROTATE_RETAIN_DAYS:-"7"}
LOGSHIPPING_AUTO_CONFIG_LOGROTATE=${LOGSHIPPING_AUTO_CONFIG_LOGROTATE:-"TRUE"}

#--------------------------------------------------
# Helper Functions
#--------------------------------------------------

# Log a message with timestamp
log_message() {
  local level="$1"
  local message="$2"
  local timestamp

  timestamp=$(date +"%Y-%m-%d %H:%M:%S")
  echo "[$timestamp] [LOGGING] $level: $message" >&2
}

# Detect OS version and set appropriate compression type for LogRotate
detect_os_and_set_compression() {
  local osVersion

  if [[ ! -f /etc/os-release ]]; then
    log_message "WARNING" "Could not find /etc/os-release, using default compression type"
    return 0
  fi

  # Read OS release file once
  local osReleaseContent
  osReleaseContent=$(<"/etc/os-release") || {
    log_message "WARNING" "Failed to read /etc/os-release, using default compression type"
    return 0
  }

  # Extract version using parameter expansion
  osVersion=$(echo "$osReleaseContent" | grep VERSION_ID | cut -d= -f2 | cut -d. -f1,2)

  case "$osVersion" in
    "3.5"|"3.8")
      LOGROTATE_COMPRESSION_TYPE="gzip"
      log_message "INFO" "Detected Alpine $osVersion, setting compression type to gzip"
      ;;
    *)
      LOGROTATE_COMPRESSION_TYPE=${LOGROTATE_COMPRESSION_TYPE:-"zstd"}
      log_message "INFO" "Using default compression type: $LOGROTATE_COMPRESSION_TYPE"
      ;;
  esac

  return 0
}

# Validate required directories exist and are writable
validate_directories() {
  local errors=0

  # Check FluentBit log directory
  if [[ ! -d "$FLUENTBIT_LOG_PATH" ]]; then
    log_message "WARNING" "FluentBit log directory does not exist: $FLUENTBIT_LOG_PATH"
    mkdir -p "$FLUENTBIT_LOG_PATH" || {
      log_message "ERROR" "Failed to create FluentBit log directory"
      errors=$((errors + 1))
    }
  fi

  # Check FluentBit storage directory
  if [[ ! -d "$FLUENTBIT_STORAGE_PATH" ]]; then
    log_message "WARNING" "FluentBit storage directory does not exist: $FLUENTBIT_STORAGE_PATH"
    mkdir -p "$FLUENTBIT_STORAGE_PATH" || {
      log_message "ERROR" "Failed to create FluentBit storage directory"
      errors=$((errors + 1))
    }
  fi

  # Return error if any directories could not be created
  if [[ $errors -gt 0 ]]; then
    return 1
  fi

  return 0
}

# Validate FluentBit configuration
validate_fluentbit_config() {
  # Check if output is supported
  case "$FLUENTBIT_OUTPUT" in
    "FORWARD"|"LOKI")
      log_message "INFO" "Using FluentBit output: $FLUENTBIT_OUTPUT"
      ;;
    *)
      log_message "WARNING" "Unsupported FluentBit output: $FLUENTBIT_OUTPUT, defaulting to FORWARD"
      FLUENTBIT_OUTPUT="FORWARD"
      ;;
  esac

  # Validate buffer sizes have valid units
  if ! [[ "$FLUENTBIT_FORWARD_BUFFER_CHUNK_SIZE" =~ ^[0-9]+[kKmMgG]$ ]]; then
    log_message "WARNING" "Invalid buffer chunk size: $FLUENTBIT_FORWARD_BUFFER_CHUNK_SIZE, defaulting to 1M"
    FLUENTBIT_FORWARD_BUFFER_CHUNK_SIZE="1M"
  fi

  if ! [[ "$FLUENTBIT_FORWARD_BUFFER_MAX_SIZE" =~ ^[0-9]+[kKmMgG]$ ]]; then
    log_message "WARNING" "Invalid buffer max size: $FLUENTBIT_FORWARD_BUFFER_MAX_SIZE, defaulting to 6M"
    FLUENTBIT_FORWARD_BUFFER_MAX_SIZE="6M"
  fi

  return 0
}

#--------------------------------------------------
# Main Execution
#--------------------------------------------------

# Skip configuration if log shipping is disabled
if [[ "${CONTAINER_ENABLE_LOGSHIPPING:-FALSE}" != "TRUE" ]]; then
  log_message "INFO" "Log shipping is disabled, skipping FluentBit configuration"
else
  # Detect OS version and set appropriate compression type
  detect_os_and_set_compression

  # Validate required directories
  validate_directories || {
    log_message "ERROR" "Failed to validate required directories"
    exit 1
  }

  # Validate FluentBit configuration
  validate_fluentbit_config

  # Log current configuration
  log_message "INFO" "FluentBit configured with mode: $FLUENTBIT_MODE, output: $FLUENTBIT_OUTPUT"
fi

# Configure logrotate if enabled
if [[ "${CONTAINER_ENABLE_LOGROTATE:-TRUE}" != "TRUE" ]]; then
  log_message "INFO" "Log rotation is disabled, skipping LogRotate configuration"
else
  log_message "INFO" "LogRotate configured with compression: $LOGROTATE_COMPRESSION_TYPE, level: $LOGROTATE_COMPRESSION_VALUE, retention: $LOGROTATE_RETAIN_DAYS days"
fi

# Export all variables for child processes
# Export FluentBit variables
export FLUENTBIT_CONFIG_PARSERS
export FLUENTBIT_CONFIG_PLUGINS
export FLUENTBIT_ENABLE_HTTP_SERVER
export FLUENTBIT_ENABLE_STORAGE_METRICS
export FLUENTBIT_FLUSH_SECONDS
export FLUENTBIT_FORWARD_BUFFER_CHUNK_SIZE
export FLUENTBIT_FORWARD_BUFFER_MAX_SIZE
export FLUENTBIT_FORWARD_PORT
export FLUENTBIT_GRACE_SECONDS
export FLUENTBIT_HTTP_LISTEN_IP
export FLUENTBIT_HTTP_LISTEN_PORT
export FLUENTBIT_LOG_FILE
export FLUENTBIT_LOG_LEVEL
export FLUENTBIT_LOG_PATH
export FLUENTBIT_MODE
export FLUENTBIT_OUTPUT
export FLUENTBIT_OUTPUT_FORWARD_HOST
export FLUENTBIT_OUTPUT_FORWARD_TLS
export FLUENTBIT_OUTPUT_FORWARD_TLS_VERIFY
export FLUENTBIT_OUTPUT_LOKI_COMPRESS_GZIP
export FLUENTBIT_OUTPUT_LOKI_HOST
export FLUENTBIT_OUTPUT_LOKI_PORT
export FLUENTBIT_OUTPUT_LOKI_TLS
export FLUENTBIT_OUTPUT_LOKI_TLS_VERIFY
export FLUENTBIT_SETUP_TYPE
export FLUENTBIT_STORAGE_BACKLOG_LIMIT
export FLUENTBIT_STORAGE_CHECKSUM
export FLUENTBIT_STORAGE_PATH
export FLUENTBIT_STORAGE_SYNC
export FLUENTBIT_TAIL_BUFFER_CHUNK_SIZE
export FLUENTBIT_TAIL_BUFFER_MAX_SIZE
export FLUENTBIT_TAIL_DB_ENABLE
export FLUENTBIT_TAIL_DB_JOURNAL_MODE
export FLUENTBIT_TAIL_DB_LOCK
export FLUENTBIT_TAIL_DB_SYNC
export FLUENTBIT_TAIL_KEY_OFFSET
export FLUENTBIT_TAIL_KEY_OFFSET_ENABLE
export FLUENTBIT_TAIL_KEY_PATH
export FLUENTBIT_TAIL_KEY_PATH_ENABLE
export FLUENTBIT_TAIL_READ_FROM_HEAD
export FLUENTBIT_TAIL_SKIP_EMPTY_LINES
export FLUENTBIT_TAIL_SKIP_LONG_LINES

# Export LogRotate variables
export LOGROTATE_COMPRESSION_TYPE
export LOGROTATE_COMPRESSION_VALUE
export LOGROTATE_RETAIN_DAYS
export LOGSHIPPING_AUTO_CONFIG_LOGROTATE
