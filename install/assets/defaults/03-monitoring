#!/command/with-contenv bash
# Purpose: Configures Zabbix monitoring agent settings for the container
# These defaults can be overridden by setting the environment variables externally

set -euo pipefail
IFS=$'\n\t'

#--------------------------------------------------
# Configuration
#--------------------------------------------------
# Basic Zabbix settings
ZABBIX_HOSTNAME=${ZABBIX_HOSTNAME:-"${CONTAINER_NAME}"}
ZABBIX_USER=${ZABBIX_USER:-"zabbix"}
ZABBIX_USER_DOAS=${ZABBIX_USER_DOAS:-"TRUE"}
ZABBIX_USER_SUDO=${ZABBIX_USER_SUDO:-"TRUE"}
ZABBIX_SETUP_TYPE=${ZABBIX_SETUP_TYPE:-"AUTO"}

# Network configuration
ZABBIX_LISTEN_IP=${ZABBIX_LISTEN_IP:-"0.0.0.0"}
ZABBIX_LISTEN_PORT=${ZABBIX_LISTEN_PORT:-"10050"}
ZABBIX_STATUS_PORT=${ZABBIX_STATUS_PORT:-"8050"}
ZABBIX_SERVER=${ZABBIX_SERVER:-"0.0.0.0/0"}
ZABBIX_SERVER_ACTIVE=${ZABBIX_SERVER_ACTIVE:-"zabbix-proxy"}

# Auto-registration options
ZABBIX_ENABLE_AUTOREGISTER=${ZABBIX_ENABLE_AUTOREGISTER:-"TRUE"}
ZABBIX_ENABLE_AUTOREGISTER_DNS=${ZABBIX_ENABLE_AUTOREGISTER_DNS:-"TRUE"}

# File paths
ZABBIX_CONFIG_PATH=${ZABBIX_CONFIG_PATH:-"/etc/zabbix/"}
ZABBIX_CONFIG_FILE=${ZABBIX_CONFIG_FILE:-"zabbix_agentd.conf"}
ZABBIX_AGENT_LOG_PATH=${ZABBIX_AGENT_LOG_PATH:-"/var/log/zabbix/agent/"}
ZABBIX_AGENT_LOG_FILE=${ZABBIX_AGENT_LOG_FILE:-"zabbix_agentd.log"}
ZABBIX_CERT_PATH=${ZABBIX_CERT_PATH:-"/etc/zabbix/certs/"}
ZABBIX_PID=${ZABBIX_PID:-"/var/lib/zabbix/run/zabbix-agent.pid"}
ZABBIX_SOCKET=${ZABBIX_SOCKET:-"/var/lib/zabbix/run/zabbix-agent.sock"}

# Performance tuning
ZABBIX_BUFFER_SEND=${ZABBIX_BUFFER_SEND:-"5"}
ZABBIX_BUFFER_SIZE=${ZABBIX_BUFFER_SIZE:-"100"}
ZABBIX_START_AGENTS=${ZABBIX_START_AGENTS:-"1"}
ZABBIX_REFRESH_ACTIVE_CHECKS=${ZABBIX_REFRESH_ACTIVE_CHECKS:-"120"}
ZABBIX_MAXLINES_SECOND=${ZABBIX_MAXLINES_SECOND:-"20"}

# Logging and debugging
ZABBIX_DEBUGLEVEL=${ZABBIX_DEBUGLEVEL:-"1"}
ZABBIX_LOG_FILE_SIZE=${ZABBIX_LOG_FILE_SIZE:-"0"}
ZABBIX_ALLOW_ROOT=${ZABBIX_ALLOW_ROOT:-"1"}
ZABBIX_REMOTECOMMANDS_ALLOW=${ZABBIX_REMOTECOMMANDS_ALLOW:-"*"}
ZABBIX_REMOTECOMMANDS_LOG=${ZABBIX_REMOTECOMMANDS_LOG:-"1"}

#--------------------------------------------------
# Helper Functions
#--------------------------------------------------
# Detects OS type and version to determine appropriate Zabbix agent type
determine_agent_type() {
  local osType
  local osVersion

  osType=$(grep -E "^ID=" /etc/os-release | cut -d= -f2)

  case "${osType}" in
    "alpine")
      osVersion=$(grep "VERSION_ID" /etc/os-release | cut -d= -f2 | cut -d. -f2 | cut -d_ -f1)
      if [[ "${osVersion}" -ge 11 ]] || [[ "${osVersion}" == "edge" ]]; then
        echo "modern"
      else
        echo "classic"
      fi
      ;;
    "debian" | "ubuntu")
      echo "modern"
      ;;
    *)
      echo "classic"
      ;;
  esac
}

#--------------------------------------------------
# Main Execution
#--------------------------------------------------
# Set agent type based on OS detection
ZABBIX_AGENT_TYPE=${ZABBIX_AGENT_TYPE:-"$(determine_agent_type)"}
