#!/command/with-contenv bash
#
# SMTP messaging configuration settings
# Sets default parameters for container email functionality
#

set -euo pipefail
IFS=$'\n\t'

#--------------------------------------------------
# Configuration
#--------------------------------------------------
# SMTP server connection settings
SMTP_HOST=${SMTP_HOST:-"postfix-relay"}
SMTP_PORT=${SMTP_PORT:-"25"}
SMTP_DOMAIN=${SMTP_DOMAIN:-"docker"}
SMTP_MAILDOMAIN=${SMTP_MAILDOMAIN:-"local"}

# SMTP security settings
SMTP_TLS=${SMTP_TLS:-"FALSE"}
SMTP_STARTTLS=${SMTP_STARTTLS:-"FALSE"}
SMTP_TLSCERTCHECK=${SMTP_TLSCERTCHECK:-"FALSE"}

# SMTP behavior settings
SMTP_AUTO_FROM=${SMTP_AUTO_FROM:-"FALSE"}

#--------------------------------------------------
# Helper Functions
#--------------------------------------------------
# Log a message to stdout with appropriate formatting
log_message() {
  local level="$1"
  local message="$2"

  if [[ -n "${CONTAINER_ENABLE_LOG_PREFIX:-}" ]] && [[ "${CONTAINER_ENABLE_LOG_PREFIX}" == "TRUE" ]]; then
    local dateFormat="${CONTAINER_LOG_PREFIX_DATE_FMT:-%Y-%m-%d}"
    local timeFormat="${CONTAINER_LOG_PREFIX_TIME_FMT:-%H:%M:%S}"
    local separator="${CONTAINER_LOG_PREFIX_SEPERATOR:-.}"

    local dateStr
    dateStr=$(date +"${dateFormat}")
    local timeStr
    timeStr=$(date +"${timeFormat}")

    echo "[${dateStr}${separator}${timeStr}] [${level}] ${message}"
  else
    echo "[${level}] ${message}"
  fi
}

# Validate SMTP configuration
validate_smtp_config() {
  # Validate SMTP_PORT is a number
  if ! [[ "${SMTP_PORT}" =~ ^[0-9]+$ ]]; then
    log_message "WARNING" "Invalid SMTP_PORT: ${SMTP_PORT}. Using default: 25"
    SMTP_PORT="25"
  fi

  # Validate boolean settings
  for varName in SMTP_TLS SMTP_STARTTLS SMTP_TLSCERTCHECK SMTP_AUTO_FROM; do
    local varValue
    varValue=${!varName}
    if [[ "${varValue}" != "TRUE" ]] && [[ "${varValue}" != "FALSE" ]]; then
      log_message "WARNING" "Invalid ${varName}: ${varValue}. Using default: FALSE"
      declare "${varName}=FALSE"
    fi
  done

  # Validate TLS settings consistency
  if [[ "${SMTP_TLS}" == "TRUE" ]] && [[ "${SMTP_STARTTLS}" == "TRUE" ]]; then
    log_message "WARNING" "Both SMTP_TLS and SMTP_STARTTLS are enabled. Using TLS."
    SMTP_STARTTLS="FALSE"
  fi

  # Validate host is not empty
  if [[ -z "${SMTP_HOST}" ]]; then
    log_message "WARNING" "SMTP_HOST is empty. Using default: postfix-relay"
    SMTP_HOST="postfix-relay"
  fi

  return 0
}

#--------------------------------------------------
# Main Execution
#--------------------------------------------------
# Validate configuration if messaging is enabled
if [[ "${CONTAINER_ENABLE_MESSAGING:-FALSE}" == "TRUE" ]]; then
  validate_smtp_config || {
    log_message "ERROR" "Failed to validate SMTP configuration"
    exit 1
  }

  # Check if SMTP host is reachable if in debug mode
  if [[ "${DEBUG_MODE:-FALSE}" == "TRUE" ]]; then
    if command -v nc &>/dev/null; then
      if ! nc -z -w 2 "${SMTP_HOST}" "${SMTP_PORT}" &>/dev/null; then
        log_message "WARNING" "SMTP host ${SMTP_HOST}:${SMTP_PORT} is not reachable"
      else
        log_message "DEBUG" "SMTP host ${SMTP_HOST}:${SMTP_PORT} is reachable"
      fi
    fi
  fi
fi

# Output debug information if enabled
if [[ "${DEBUG_MODE:-FALSE}" == "TRUE" ]]; then
  log_message "DEBUG" "SMTP configuration loaded:"
  log_message "DEBUG" "SMTP_HOST=${SMTP_HOST}"
  log_message "DEBUG" "SMTP_PORT=${SMTP_PORT}"
  log_message "DEBUG" "SMTP_DOMAIN=${SMTP_DOMAIN}"
  log_message "DEBUG" "SMTP_MAILDOMAIN=${SMTP_MAILDOMAIN}"
  log_message "DEBUG" "SMTP_TLS=${SMTP_TLS}"
  log_message "DEBUG" "SMTP_STARTTLS=${SMTP_STARTTLS}"
  log_message "DEBUG" "SMTP_TLSCERTCHECK=${SMTP_TLSCERTCHECK}"
  log_message "DEBUG" "SMTP_AUTO_FROM=${SMTP_AUTO_FROM}"
fi

# Export variables to make them available to child processes
export SMTP_AUTO_FROM
export SMTP_DOMAIN
export SMTP_HOST
export SMTP_MAILDOMAIN
export SMTP_PORT
export SMTP_STARTTLS
export SMTP_TLS
export SMTP_TLSCERTCHECK

log_message "DEBUG" "Messaging defaults loaded successfully"
